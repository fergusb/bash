# sourced by .bash_profile

# handy calculator
function calc () {
  awk "BEGIN { print $* ; }"
}

# extract depending on extension
function extract() {
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xvjf $1     ;;
      *.tar.gz)    tar xvzf $1     ;;
      *.bz2)       bunzip2 $1      ;;
      *.rar)       unrar x $1      ;;
      *.gz)        gunzip $1       ;;
      *.tar)       tar xvf $1      ;;
      *.tbz2)      tar xvjf $1     ;;
      *.tgz)       tar xvzf $1     ;;
      *.zip)       unzip $1        ;;
      *.Z)         uncompress $1   ;;
      *.7z)        7z x $1         ;;
      *)           echo "'$1' cannot be extracted via >extract<" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# find stuff; do stuff
function ff() { find . -type f -iname '*'$*'*' ; }
function fe() { find . -type f -iname '*'${1:-}'*' -exec ${2:-file} {} \;  ; }

# recursively fix dir/file permissions on a given dir
function fixperms() {
  if [ -d "$1" ]; then 
    find "$1" -type d -exec chmod 755 {} \; 
    find "$1" -type f -exec chmod 644 {} \;
  else
    echo "usage: fix [directory]"
  fi
}

# Tar and gzip a directory
function gztar { tar -cplf - $1 | gzip -9 > $1.tar.gz; }

# make dir and switch to it
function mkcd {
  mkdir -p $1
  cd $1
}

# auto send an attachment from CLI {{{
function sendfile() {
  if [ $# -ne 2 ]; then
    echo "usage: send [file] [recipient]"
  else
    echo "Please see attached..." | mutt -s "File: $1" -a $1 -- $2 &
  fi
}

# send someone a text
sendtxt() {
  if [ $# -lt 2 ]; then
    echo "usage: sendtxt [number] [some message]"
  else
    number="$1"; shift
    echo "$*" | mail "$number@vtext.com"
  fi
}

# symlink regardless of order passed
function symlink() {
  if [ $# -ne 2 ]; then
    echo "usage: symlink [link] [target]"
    echo "   or: symlink [target] [link]"
    echo
  elif [ -e $1 -a -e $2 ]; then
    echo "error: both files exist."
  elif [ ! -e $1 -a ! -e $2 ]; then
    echo "error: neither file exists."
  elif [ -e $1 ]; then
    ln -s $1 $2
  else
    ln -s $2 $1
  fi
}

# vim:ft=sh
